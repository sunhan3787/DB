mysql技术总结2：
一、事务：是mysql的执行最小单元，也就是原子性；要么执行成功，要么执行失败；
1) 在 MySQL 中只有使用了 Innodb 数据库引擎的数据库或表才支持事务。
2) 事务处理可以用来维护数据库的完整性，保证成批的 SQL 语句要么全部执行，要么全部不执行。
3) 事务用来管理 insert,update,delete 语句。
mysql> start transaction;#手动开启事务
mysql> commit
举例：比如一个银行转账业务，A向B转账100元，B 向C转账200元；中间临时（A->money-100,B->money+100; B->money -200, C->money+200）
数据会暂存在under log 临时表中，当事务结束后，更新数据：将undo log update（临时表的计算结果：A->money-100;B->money-100;C->money+200）
写到到行表中；因此, 事务回滚操作依赖于undo log;

二、事务四大特性：原子性，一致性，隔离性，持久性；
三、隔离级别：
使用系统变量设置事务隔离级别：
//全局
SET GLOBAL tx_isolation='REPEATABLE-READ';
//局部
SET SESSION tx_isolation='REPEATABLE-READ'; 
1.读未提交：脏读，不可重复读，幻读；
2.不可重复度：不可重复读，幻读；
3.可重复度：幻读；
4.串行化；
5. 实现隔离机制的方法主要有两种 
1)  加读写锁;
2) 一致性快照读，即 MVCC , MVCC 只在 repeatable read 和 read committed两个隔离级别下工作;

四、数据库锁：为什么MyISAM引擎不支持事务，InnoDB引擎支持事务；
1.表级锁；MyISAM引擎；
2.行级锁；InnoDN引擎；
3.页级锁；BDB引擎；

五、存储引擎：
Mysql常用的存储引擎主要分为InnoDB和MyISAM两种，当然还有memory, BDB引擎。

1.MyISAM存储引擎：存储限制256TB
使用 B+Tree 作为索引结构,  叶节点的 data 域存放的是数据记录的地址。
MyISAM存储引擎支持全文索引，btree索引，数据压缩；不支持hash索引,集群索引，数据索引，不支持外键。
空间使用率低。
2.InnoDB存储引擎：存储限制64TB
使用 B+Tree 作为索引结构, 叶节点的 data 域存放的是数据。
InnoDB存储引擎支持事务，btree索引，集群索引，数据索引，支持外键；不支持全文索引，hash索引,数据压缩。
空间使用率高。
3.区别：
（1）b+tree叶子结点存储的数据不同；
（2）查找时，MyISAM存储引擎需要把整个树加载到内存中，再进行查找，因此查询速度快；InnoDB存储引擎只加载树的一部分；

4.InnoDB 两种类型的行锁 ：
共享锁（S S ）：允许一个事务去读一行，阻止其他事务获得相同数据集的排他锁。
排他锁（Ｘ）：允许获取排他锁的事务更新数据，阻止其他事务取得相同的数据集共享读锁和排他写锁。
InnoDB 两种内部使用的意向锁（ Intention Locks ），这两种意向锁都是表锁。
意向共享锁（ IS ）：事务打算给数据行共享锁，事务在给一个数据行加共享锁前必须先取得该表的 IS 锁。
意向排他锁（ IX ）：事务打算给数据行加排他锁，事务在给一个数据行加排他锁前必须先取得该表的 IX 锁。

六、索引
主要分为：普通索引, 唯一性索引, 主键索引, 空间索引, 全文索引。联合索引
比如建一张表：teacher(id, name);
Id->主键索引， 数据结构b+tree；
name->普通索引，数据结构b+tree;
